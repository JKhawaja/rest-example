// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "GitHub SSH Keys": Application User Types
//
// Command:
// $ goagen
// --design=github.com/JKhawaja/replicated/design
// --out=$(GOPATH)\src\github.com\JKhawaja\replicated
// --version=v1.2.0-dirty

package client

import (
	"github.com/goadesign/goa"
)

// Type for a GitHub user's public SSH Key
type userKey struct {
	// The ID of the public SSH key on GitHub.
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// The public SSH key
	Key *string `form:"key,omitempty" json:"key,omitempty" xml:"key,omitempty"`
}

// Validate validates the userKey type instance.
func (ut *userKey) Validate() (err error) {
	if ut.ID == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "id"))
	}
	if ut.Key == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "key"))
	}
	return
}

// Publicize creates UserKey from userKey
func (ut *userKey) Publicize() *UserKey {
	var pub UserKey
	if ut.ID != nil {
		pub.ID = *ut.ID
	}
	if ut.Key != nil {
		pub.Key = *ut.Key
	}
	return &pub
}

// Type for a GitHub user's public SSH Key
type UserKey struct {
	// The ID of the public SSH key on GitHub.
	ID int `form:"id" json:"id" xml:"id"`
	// The public SSH key
	Key string `form:"key" json:"key" xml:"key"`
}

// Validate validates the UserKey type instance.
func (ut *UserKey) Validate() (err error) {

	if ut.Key == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "key"))
	}
	return
}
